===================Module /Users/alchen/Documents/git/global-approx-check/tests/allapprox1.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
 *Global Variables:
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca %struct.Point, align 4 //NotApproxable:0
  %3 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 0 //NotApproxable:1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 1 //NotApproxable:1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %5, %7
  store i32 %8, i32* %3, align 4
  %9 = load i32, i32* %3, align 4
  %10 = add nsw i32 %9, 3
  %11 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 0 //NotApproxable:1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 0 //NotApproxable:1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 1 //NotApproxable:1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 5, %15
  %17 = add nsw i32 %13, %16
  %18 = getelementptr inbounds %struct.Point, %struct.Point* %2, i32 0, i32 1 //NotApproxable:1
  store i32 %17, i32* %18, align 4
  %19 = load i32, i32* %3, align 4
  store i32 %19, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 0), align 16
  %20 = bitcast %struct.Point* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([10 x %struct.Point]* @pts to i8*), i8* %20, i64 8, i32 4, i1 false)
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/allapprox2.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %17 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %23 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %5, %7
  store i32 %8, i32* %2, align 4
  %9 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %12 = load i32, i32* %11, align 4
  %13 = mul nsw i32 5, %12
  %14 = add nsw i32 %10, %13
  %15 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  store i32 %14, i32* %15, align 4
  %16 = load i32, i32* %2, align 4
  %17 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %18 = load i32, i32* %17, align 4 //NotApproxable:1
  %19 = sext i32 %18 to i64 //NotApproxable:1
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %19 //NotApproxable:1
  store i32 %16, i32* %20, align 4
  %21 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %24 = load i32, i32* %23, align 4 //NotApproxable:1
  %25 = sext i32 %24 to i64 //NotApproxable:1
  %26 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %25 //NotApproxable:1
  %27 = getelementptr inbounds %struct.Point, %struct.Point* %26, i32 0, i32 1 //NotApproxable:1
  store i32 %22, i32* %27, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/allapprox3.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4
  %5 = add nsw i32 %4, 3
  %6 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  store i32 %5, i32* %6, align 4
  %7 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %10 = load i32, i32* %9, align 4
  %11 = mul nsw i32 5, %10
  %12 = add nsw i32 %8, %11
  %13 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  store i32 %12, i32* %13, align 4
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* %2, align 4 //NotApproxable:1
  %16 = sext i32 %15 to i64 //NotApproxable:1
  %17 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %16 //NotApproxable:1
  store i32 %14, i32* %17, align 4
  %18 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* %2, align 4 //NotApproxable:1
  %21 = sext i32 %20 to i64 //NotApproxable:1
  %22 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %21 //NotApproxable:1
  %23 = getelementptr inbounds %struct.Point, %struct.Point* %22, i32 0, i32 1 //NotApproxable:1
  store i32 %19, i32* %23, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/allapprox4.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4 //NotApproxable:1
  %5 = icmp sgt i32 %4, 0 //NotApproxable:1
  br i1 %5, label %6, label %18
  %7 = load i32, i32* %2, align 4
  %8 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %7, %9
  %11 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %2, align 4 //NotApproxable:1
  %15 = sext i32 %14 to i64 //NotApproxable:1
  %16 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %15 //NotApproxable:1
  %17 = getelementptr inbounds %struct.Point, %struct.Point* %16, i32 0, i32 1 //NotApproxable:1
  store i32 %13, i32* %17, align 4
  br label %30
  %19 = load i32, i32* %2, align 4
  %20 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %19, %21
  %23 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %2, align 4 //NotApproxable:1
  %27 = sext i32 %26 to i64 //NotApproxable:1
  %28 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %27 //NotApproxable:1
  %29 = getelementptr inbounds %struct.Point, %struct.Point* %28, i32 0, i32 0 //NotApproxable:1
  store i32 %25, i32* %29, align 8
  br label %30
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox1.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
  %21 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %28 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %7 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4 //NotApproxable:1
  %5 = add nsw i32 %4, 1 //NotApproxable:1
  store i32 %5, i32* %2, align 4 //NotApproxable:1
  %6 = load i32, i32* %2, align 4 //NotApproxable:1
  %7 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %8 = load i32, i32* %7, align 4 //NotApproxable:1
  %9 = add nsw i32 %6, %8 //NotApproxable:1
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  store i32 %9, i32* %10, align 4 //NotApproxable:1
  %11 = load i32, i32* %2, align 4 //NotApproxable:1
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %13 = load i32, i32* %12, align 4 //NotApproxable:1
  %14 = add nsw i32 %11, %13 //NotApproxable:1
  %15 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  store i32 %14, i32* %15, align 4 //NotApproxable:1
  %16 = load i32, i32* %2, align 4 //NotApproxable:1
  %17 = sext i32 %16 to i64 //NotApproxable:1
  %18 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %17 //NotApproxable:1
  store i32 10, i32* %18, align 4
  %19 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %22 = load i32, i32* %21, align 4 //NotApproxable:1
  %23 = sext i32 %22 to i64 //NotApproxable:1
  %24 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %23 //NotApproxable:1
  %25 = getelementptr inbounds %struct.Point, %struct.Point* %24, i32 0, i32 0 //NotApproxable:1
  store i32 %20, i32* %25, align 8
  %26 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %29 = load i32, i32* %28, align 4 //NotApproxable:1
  %30 = sext i32 %29 to i64 //NotApproxable:1
  %31 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %30 //NotApproxable:1
  %32 = getelementptr inbounds %struct.Point, %struct.Point* %31, i32 0, i32 1 //NotApproxable:1
  store i32 %27, i32* %32, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox10.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %3 = alloca i32*, align 8 //NotApproxable:0
  %9 = getelementptr inbounds i32, i32* %8, i64 1 //NotApproxable:1
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca i32*, align 8 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4 //NotApproxable:1
  %5 = add nsw i32 %4, 123 //NotApproxable:1
  %6 = load i32*, i32** %3, align 8 //NotApproxable:1
  %7 = getelementptr inbounds i32, i32* %6, i64 1 //NotApproxable:1
  store i32 %5, i32* %7, align 4 //NotApproxable:1
  %8 = load i32*, i32** %3, align 8 //NotApproxable:1
  %9 = getelementptr inbounds i32, i32* %8, i64 1 //NotApproxable:1
  %10 = load i32, i32* %9, align 4 //NotApproxable:1
  %11 = sext i32 %10 to i64 //NotApproxable:1
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %11 //NotApproxable:1
  store i32 5, i32* %12, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox11.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  @a = global i32 0, align 4
 *Global Variables:
  @a = global i32 0, align 4
  @ints = common global [10 x i32] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @a, align 4 //NotApproxable:1
  %3 = add nsw i32 %2, 10 //NotApproxable:1
  store i32 %3, i32* @a, align 4 //NotApproxable:1
  %4 = load i32, i32* @a, align 4 //NotApproxable:1
  %5 = sext i32 %4 to i64 //NotApproxable:1
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %5 //NotApproxable:1
  store i32 123, i32* %6, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox12.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32*, align 8 //NotApproxable:0
  %3 = alloca i32, align 4 //NotApproxable:0
  %17 = getelementptr inbounds i32, i32* %16, i64 %15 //NotApproxable:1
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32*, align 8 //NotApproxable:0
  %3 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %3, align 4 //NotApproxable:1
  %5 = add nsw i32 %4, 10 //NotApproxable:1
  %6 = load i32, i32* %3, align 4 //NotApproxable:1
  %7 = load i32, i32* %3, align 4 //NotApproxable:1
  %8 = add nsw i32 %6, %7 //NotApproxable:1
  %9 = sext i32 %8 to i64 //NotApproxable:1
  %10 = load i32*, i32** %2, align 8 //NotApproxable:1
  %11 = getelementptr inbounds i32, i32* %10, i64 %9 //NotApproxable:1
  store i32 %5, i32* %11, align 4 //NotApproxable:1
  %12 = load i32, i32* %3, align 4 //NotApproxable:1
  %13 = load i32, i32* %3, align 4 //NotApproxable:1
  %14 = add nsw i32 %12, %13 //NotApproxable:1
  %15 = sext i32 %14 to i64 //NotApproxable:1
  %16 = load i32*, i32** %2, align 8 //NotApproxable:1
  %17 = getelementptr inbounds i32, i32* %16, i64 %15 //NotApproxable:1
  %18 = load i32, i32* %17, align 4 //NotApproxable:1
  %19 = sext i32 %18 to i64 //NotApproxable:1
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %19 //NotApproxable:1
  store i32 12345, i32* %20, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox2.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %6 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %8 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
 *Global Variables:
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %7 = load i32, i32* %6, align 4 //NotApproxable:1
  %8 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %9 = load i32, i32* %8, align 4 //NotApproxable:1
  %10 = add nsw i32 %7, %9 //NotApproxable:1
  %11 = sext i32 %10 to i64 //NotApproxable:1
  %12 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %11 //NotApproxable:1
  %13 = getelementptr inbounds %struct.Point, %struct.Point* %12, i32 0, i32 1 //NotApproxable:1
  store i32 %5, i32* %13, align 4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox3.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  br label %4
  %5 = load i32, i32* %2, align 4 //NotApproxable:1
  %6 = icmp sgt i32 %5, 0 //NotApproxable:1
  br i1 %6, label %7, label %16
  %8 = load i32, i32* %2, align 4 //NotApproxable:1
  %9 = add nsw i32 %8, 1 //NotApproxable:1
  store i32 %9, i32* %2, align 4 //NotApproxable:1
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %2, align 4 //NotApproxable:1
  %13 = sext i32 %12 to i64 //NotApproxable:1
  %14 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %13 //NotApproxable:1
  %15 = getelementptr inbounds %struct.Point, %struct.Point* %14, i32 0, i32 1 //NotApproxable:1
  store i32 %11, i32* %15, align 4
  br label %4
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox4.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %4 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4 //NotApproxable:1
  store i32 0, i32* %4, align 4 //NotApproxable:1
  br label %5
  %6 = load i32, i32* %4, align 4 //NotApproxable:1
  %7 = icmp slt i32 %6, 1000 //NotApproxable:1
  br i1 %7, label %8, label %18
  %9 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* %4, align 4 //NotApproxable:1
  %12 = sext i32 %11 to i64 //NotApproxable:1
  %13 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %12 //NotApproxable:1
  %14 = getelementptr inbounds %struct.Point, %struct.Point* %13, i32 0, i32 1 //NotApproxable:1
  store i32 %10, i32* %14, align 4
  br label %15
  %16 = load i32, i32* %4, align 4 //NotApproxable:1
  %17 = add nsw i32 %16, 1 //NotApproxable:1
  store i32 %17, i32* %4, align 4 //NotApproxable:1
  br label %5
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox5.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %4 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @pts = common global [10 x %struct.Point] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4 //NotApproxable:1
  store i32 0, i32* %4, align 4 //NotApproxable:1
  br label %5
  %6 = load i32, i32* %4, align 4 //NotApproxable:1
  %7 = load i32, i32* %2, align 4 //NotApproxable:1
  %8 = icmp slt i32 %6, %7 //NotApproxable:1
  br i1 %8, label %9, label %19
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %11 = load i32, i32* %10, align 4
  %12 = load i32, i32* %4, align 4 //NotApproxable:1
  %13 = sext i32 %12 to i64 //NotApproxable:1
  %14 = getelementptr inbounds [10 x %struct.Point], [10 x %struct.Point]* @pts, i64 0, i64 %13 //NotApproxable:1
  %15 = getelementptr inbounds %struct.Point, %struct.Point* %14, i32 0, i32 1 //NotApproxable:1
  store i32 %11, i32* %15, align 4
  br label %16
  %17 = load i32, i32* %4, align 4 //NotApproxable:1
  %18 = add nsw i32 %17, 1 //NotApproxable:1
  store i32 %18, i32* %4, align 4 //NotApproxable:1
  br label %5
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox6.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
  %5 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
 *Global Variables:
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4 //NotApproxable:1
  %5 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %6 = load i32, i32* %5, align 4 //NotApproxable:1
  %7 = add nsw i32 %4, %6 //NotApproxable:1
  store i32 %7, i32* %2, align 4 //NotApproxable:1
  %8 = load i32, i32* %2, align 4 //NotApproxable:1
  %9 = icmp sgt i32 %8, 0 //NotApproxable:1
  br i1 %9, label %10, label %11
  store i32 3, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 5), align 4
  br label %12
  store i32 1, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 2), align 8
  br label %12
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox7.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %2 = alloca i32, align 4 //NotApproxable:0
  %5 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
 *Global Variables:
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %2, align 4 //NotApproxable:1
  %5 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %6 = load i32, i32* %5, align 4 //NotApproxable:1
  %7 = add nsw i32 %4, %6 //NotApproxable:1
  store i32 %7, i32* %2, align 4 //NotApproxable:1
  %8 = load i32, i32* %2, align 4 //NotApproxable:1
  %9 = icmp sgt i32 %8, 0 //NotApproxable:1
  br i1 %9, label %10, label %11
  store i32 3, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 5), align 4
  br label %12
  store i32 1, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 2), align 8
  br label %12
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox8.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %4 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %2 = alloca i32, align 4 //NotApproxable:0
  %17 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
 *Global Variables:
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %5 = load i32, i32* %4, align 4 //NotApproxable:1
  %6 = icmp sgt i32 %5, 10 //NotApproxable:1
  br i1 %6, label %7, label %13
  %8 = load i32, i32* %2, align 4 //NotApproxable:1
  %9 = add nsw i32 %8, 1 //NotApproxable:1
  store i32 %9, i32* %2, align 4 //NotApproxable:1
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %11 = load i32, i32* %10, align 4 //NotApproxable:1
  %12 = add nsw i32 %11, 2 //NotApproxable:1
  store i32 %12, i32* %10, align 4 //NotApproxable:1
  br label %13
  %14 = load i32, i32* %2, align 4 //NotApproxable:1
  %15 = icmp sgt i32 %14, 10 //NotApproxable:1
  br i1 %15, label %16, label %22
  %17 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %18 = load i32, i32* %17, align 4 //NotApproxable:1
  %19 = icmp slt i32 %18, 1 //NotApproxable:1
  br i1 %19, label %20, label %21
  store i32 6, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @ints, i64 0, i64 3), align 4
  br label %21
  br label %22
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/nonapprox9.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %4 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %14 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
 *Global Variables:
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4 //NotApproxable:1
  br label %5
  %6 = load i32, i32* %4, align 4 //NotApproxable:1
  %7 = load i32, i32* %2, align 4 //NotApproxable:1
  %8 = icmp slt i32 %6, %7 //NotApproxable:1
  br i1 %8, label %9, label %23
  %10 = load i32, i32* %2, align 4 //NotApproxable:1
  %11 = mul nsw i32 %10, 1 //NotApproxable:1
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %13 = load i32, i32* %12, align 4 //NotApproxable:1
  %14 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %15 = load i32, i32* %14, align 4 //NotApproxable:1
  %16 = add nsw i32 %13, %15 //NotApproxable:1
  %17 = icmp sgt i32 %11, %16 //NotApproxable:1
  br i1 %17, label %18, label %19
  br label %23
  br label %20
  %21 = load i32, i32* %4, align 4 //NotApproxable:1
  %22 = add nsw i32 %21, 1 //NotApproxable:1
  store i32 %22, i32* %4, align 4 //NotApproxable:1
  br label %5
  ret i32 0

===================Module /Users/alchen/Documents/git/global-approx-check/tests/test.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %3 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @x = global [6 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5], align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca i32, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  %5 = alloca [10 x i32], align 16 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 10, i32* %2, align 4 //NotApproxable:1
  store i32 20, i32* %3, align 4 //NotApproxable:1
  store i32 30, i32* %4, align 4 //NotApproxable:1
  %6 = load i32, i32* %3, align 4 //NotApproxable:1
  %7 = load i32, i32* %4, align 4 //NotApproxable:1
  %8 = add nsw i32 %6, %7 //NotApproxable:1
  store i32 %8, i32* %2, align 4 //NotApproxable:1
  %9 = load i32, i32* %3, align 4 //NotApproxable:1
  %10 = load i32, i32* %4, align 4 //NotApproxable:1
  %11 = add nsw i32 %9, %10 //NotApproxable:1
  store i32 %11, i32* %3, align 4 //NotApproxable:1
  %12 = load i32, i32* %2, align 4 //NotApproxable:1
  %13 = load i32, i32* %3, align 4 //NotApproxable:1
  %14 = add nsw i32 %12, %13 //NotApproxable:1
  store i32 %14, i32* %4, align 4 //NotApproxable:1
  %15 = load i32, i32* %2, align 4
  %16 = load i32, i32* %3, align 4 //NotApproxable:1
  %17 = sext i32 %16 to i64 //NotApproxable:1
  %18 = getelementptr inbounds [10 x i32], [10 x i32]* %5, i64 0, i64 %17 //NotApproxable:1
  store i32 %15, i32* %18, align 4
  %19 = load i32, i32* %3, align 4 //NotApproxable:1
  %20 = load i32, i32* %2, align 4 //NotApproxable:1
  %21 = add nsw i32 %19, %20 //NotApproxable:1
  store i32 %21, i32* %2, align 4 //NotApproxable:1
  %22 = getelementptr inbounds [10 x i32], [10 x i32]* %5, i64 0, i64 2 //NotApproxable:1
  %23 = load i32, i32* %22, align 8
  %24 = load i32, i32* %2, align 4 //NotApproxable:1
  %25 = sext i32 %24 to i64 //NotApproxable:1
  %26 = getelementptr inbounds [6 x i32], [6 x i32]* @x, i64 0, i64 %25 //NotApproxable:1
  store i32 %23, i32* %26, align 4
  %27 = load i32, i32* %4, align 4
  ret i32 %27


===================Module /Users/alchen/Documents/git/global-approx-check/tests/twoapprox1.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %5 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  %5 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4 //NotApproxable:1
  br label %6
  %7 = load i32, i32* %5, align 4 //NotApproxable:1
  %8 = icmp slt i32 %7, 1000 //NotApproxable:1
  br i1 %8, label %9, label %23
  %10 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %11, %13
  %15 = load i32, i32* %5, align 4
  %16 = add nsw i32 %14, %15
  %17 = load i32, i32* %5, align 4 //NotApproxable:1
  %18 = sext i32 %17 to i64 //NotApproxable:1
  %19 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %18 //NotApproxable:1
  store i32 %16, i32* %19, align 4
  br label %20
  %21 = load i32, i32* %5, align 4 //NotApproxable:1
  %22 = add nsw i32 %21, 1 //NotApproxable:1
  store i32 %22, i32* %5, align 4 //NotApproxable:1
  br label %6
  ret i32 0


===================Module /Users/alchen/Documents/git/global-approx-check/tests/twoapprox2.bc===================
#Function: main
 *Parents:
 *Childs:
 *Critical Addresses:
  %5 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
 *Global Variables:
  @ints = common global [10 x i32] zeroinitializer, align 16
 *Arguments:
 *Instructions:
  %1 = alloca i32, align 4 //NotApproxable:0
  %2 = alloca i32, align 4 //NotApproxable:0
  %3 = alloca %struct.Point, align 4 //NotApproxable:0
  %4 = alloca i32, align 4 //NotApproxable:0
  %5 = alloca i32, align 4 //NotApproxable:0
  store i32 0, i32* %1, align 4
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4 //NotApproxable:1
  br label %6
  %7 = load i32, i32* %5, align 4 //NotApproxable:1
  %8 = load i32, i32* %2, align 4 //NotApproxable:1
  %9 = icmp slt i32 %7, %8 //NotApproxable:1
  br i1 %9, label %10, label %24
  %11 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 0 //NotApproxable:1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.Point, %struct.Point* %3, i32 0, i32 1 //NotApproxable:1
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %12, %14
  %16 = load i32, i32* %5, align 4
  %17 = add nsw i32 %15, %16
  %18 = load i32, i32* %5, align 4 //NotApproxable:1
  %19 = sext i32 %18 to i64 //NotApproxable:1
  %20 = getelementptr inbounds [10 x i32], [10 x i32]* @ints, i64 0, i64 %19 //NotApproxable:1
  store i32 %17, i32* %20, align 4
  br label %21
  %22 = load i32, i32* %5, align 4 //NotApproxable:1
  %23 = add nsw i32 %22, 1 //NotApproxable:1
  store i32 %23, i32* %5, align 4 //NotApproxable:1
  br label %6
  ret i32 0
